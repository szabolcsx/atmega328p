GAS LISTING /tmp/cc1C1wZc.s 			page 1


   1               		.file	"adc.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/szoke/AVR/adc/",100,0,2,.Ltext0
   8               		.stabs	"adc.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"short _Fract:t(0,15)=r(0,1);1;0;",128,0,0,0
  27               		.stabs	"_Fract:t(0,16)=r(0,1);2;0;",128,0,0,0
  28               		.stabs	"long _Fract:t(0,17)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"long long _Fract:t(0,18)=r(0,1);8;0;",128,0,0,0
  30               		.stabs	"unsigned short _Fract:t(0,19)=r(0,1);1;0;",128,0,0,0
  31               		.stabs	"unsigned _Fract:t(0,20)=r(0,1);2;0;",128,0,0,0
  32               		.stabs	"unsigned long _Fract:t(0,21)=r(0,1);4;0;",128,0,0,0
  33               		.stabs	"unsigned long long _Fract:t(0,22)=r(0,1);8;0;",128,0,0,0
  34               		.stabs	"_Sat short _Fract:t(0,23)=r(0,1);1;0;",128,0,0,0
  35               		.stabs	"_Sat _Fract:t(0,24)=r(0,1);2;0;",128,0,0,0
  36               		.stabs	"_Sat long _Fract:t(0,25)=r(0,1);4;0;",128,0,0,0
  37               		.stabs	"_Sat long long _Fract:t(0,26)=r(0,1);8;0;",128,0,0,0
  38               		.stabs	"_Sat unsigned short _Fract:t(0,27)=r(0,1);1;0;",128,0,0,0
  39               		.stabs	"_Sat unsigned _Fract:t(0,28)=r(0,1);2;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned long _Fract:t(0,29)=r(0,1);4;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned long long _Fract:t(0,30)=r(0,1);8;0;",128,0,0,0
  42               		.stabs	"short _Accum:t(0,31)=r(0,1);2;0;",128,0,0,0
  43               		.stabs	"_Accum:t(0,32)=r(0,1);4;0;",128,0,0,0
  44               		.stabs	"long _Accum:t(0,33)=r(0,1);8;0;",128,0,0,0
  45               		.stabs	"long long _Accum:t(0,34)=r(0,1);8;0;",128,0,0,0
  46               		.stabs	"unsigned short _Accum:t(0,35)=r(0,1);2;0;",128,0,0,0
  47               		.stabs	"unsigned _Accum:t(0,36)=r(0,1);4;0;",128,0,0,0
  48               		.stabs	"unsigned long _Accum:t(0,37)=r(0,1);8;0;",128,0,0,0
  49               		.stabs	"unsigned long long _Accum:t(0,38)=r(0,1);8;0;",128,0,0,0
  50               		.stabs	"_Sat short _Accum:t(0,39)=r(0,1);2;0;",128,0,0,0
  51               		.stabs	"_Sat _Accum:t(0,40)=r(0,1);4;0;",128,0,0,0
  52               		.stabs	"_Sat long _Accum:t(0,41)=r(0,1);8;0;",128,0,0,0
  53               		.stabs	"_Sat long long _Accum:t(0,42)=r(0,1);8;0;",128,0,0,0
  54               		.stabs	"_Sat unsigned short _Accum:t(0,43)=r(0,1);2;0;",128,0,0,0
  55               		.stabs	"_Sat unsigned _Accum:t(0,44)=r(0,1);4;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned long _Accum:t(0,45)=r(0,1);8;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned long long _Accum:t(0,46)=r(0,1);8;0;",128,0,0,0
GAS LISTING /tmp/cc1C1wZc.s 			page 2


  58               		.stabs	"void:t(0,47)=(0,47)",128,0,0,0
  59               		.stabs	"adc.h",130,0,0,0
  60               		.stabs	" :T(1,1)=@s8;eADC_PRESCALER2:1,ADC_PRESCALER4:2,ADC_PRESCALER8:3,ADC_PRESCALER16:4,ADC_PRE
  61               		.stabs	"ADC_PRESCLAER:t(1,2)=(1,1)",128,0,13,0
  62               		.stabs	" :T(1,3)=@s8;eADC_RIGHT_ADJUSTED:0,ADC_LEFT_ADJUSTED:1,;",128,0,0,0
  63               		.stabs	"ADC_RESULT_FORMAT:t(1,4)=(1,3)",128,0,19,0
  64               		.stabs	" :T(1,5)=@s8;eADC_VR_AREF:0,ADC_VR_AVCC:1,ADC_VR_INTERNAL:3,;",128,0,0,0
  65               		.stabs	"ADC_VOLTAGE_REFERENCE:t(1,6)=(1,5)",128,0,26,0
  66               		.stabs	" :T(1,7)=@s8;eADC_CHANNEL0:0,ADC_CHANNEL1:1,ADC_CHANNEL2:2,ADC_CHANNEL3:3,ADC_CHANNEL4:4,A
  67               		.stabs	"ADC_CHANNEL:t(1,8)=(1,7)",128,0,42,0
  68               		.stabn	162,0,0,0
  69               		.stabs	"/usr/lib/avr/include/avr/io.h",130,0,0,0
  70               		.stabs	"/usr/lib/avr/include/avr/sfr_defs.h",130,0,0,0
  71               		.stabs	"/usr/lib/avr/include/inttypes.h",130,0,0,0
  72               		.stabs	"/usr/lib/gcc/avr/4.8.1/include/stdint.h",130,0,0,0
  73               		.stabs	"/usr/lib/avr/include/stdint.h",130,0,0,0
  74               		.stabs	"int8_t:t(6,1)=(0,10)",128,0,121,0
  75               		.stabs	"uint8_t:t(6,2)=(0,11)",128,0,122,0
  76               		.stabs	"int16_t:t(6,3)=(0,1)",128,0,123,0
  77               		.stabs	"uint16_t:t(6,4)=(0,4)",128,0,124,0
  78               		.stabs	"int32_t:t(6,5)=(0,3)",128,0,125,0
  79               		.stabs	"uint32_t:t(6,6)=(0,5)",128,0,126,0
  80               		.stabs	"int64_t:t(6,7)=(0,6)",128,0,128,0
  81               		.stabs	"uint64_t:t(6,8)=(0,7)",128,0,129,0
  82               		.stabs	"intptr_t:t(6,9)=(6,3)",128,0,142,0
  83               		.stabs	"uintptr_t:t(6,10)=(6,4)",128,0,147,0
  84               		.stabs	"int_least8_t:t(6,11)=(6,1)",128,0,159,0
  85               		.stabs	"uint_least8_t:t(6,12)=(6,2)",128,0,164,0
  86               		.stabs	"int_least16_t:t(6,13)=(6,3)",128,0,169,0
  87               		.stabs	"uint_least16_t:t(6,14)=(6,4)",128,0,174,0
  88               		.stabs	"int_least32_t:t(6,15)=(6,5)",128,0,179,0
  89               		.stabs	"uint_least32_t:t(6,16)=(6,6)",128,0,184,0
  90               		.stabs	"int_least64_t:t(6,17)=(6,7)",128,0,192,0
  91               		.stabs	"uint_least64_t:t(6,18)=(6,8)",128,0,199,0
  92               		.stabs	"int_fast8_t:t(6,19)=(6,1)",128,0,213,0
  93               		.stabs	"uint_fast8_t:t(6,20)=(6,2)",128,0,218,0
  94               		.stabs	"int_fast16_t:t(6,21)=(6,3)",128,0,223,0
  95               		.stabs	"uint_fast16_t:t(6,22)=(6,4)",128,0,228,0
  96               		.stabs	"int_fast32_t:t(6,23)=(6,5)",128,0,233,0
  97               		.stabs	"uint_fast32_t:t(6,24)=(6,6)",128,0,238,0
  98               		.stabs	"int_fast64_t:t(6,25)=(6,7)",128,0,246,0
  99               		.stabs	"uint_fast64_t:t(6,26)=(6,8)",128,0,253,0
 100               		.stabs	"intmax_t:t(6,27)=(6,7)",128,0,273,0
 101               		.stabs	"uintmax_t:t(6,28)=(6,8)",128,0,278,0
 102               		.stabn	162,0,0,0
 103               		.stabn	162,0,0,0
 104               		.stabs	"int_farptr_t:t(4,1)=(6,5)",128,0,77,0
 105               		.stabs	"uint_farptr_t:t(4,2)=(6,6)",128,0,81,0
 106               		.stabn	162,0,0,0
 107               		.stabn	162,0,0,0
 108               		.stabs	"/usr/lib/avr/include/avr/fuse.h",130,0,0,0
 109               		.stabs	"__fuse_t:t(7,1)=(7,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244,0
 110               		.stabn	162,0,0,0
 111               		.stabn	162,0,0,0
 112               		.stabs	"adcEnable:F(0,47)",36,0,5,adcEnable
 113               	.global	adcEnable
 114               		.type	adcEnable, @function
GAS LISTING /tmp/cc1C1wZc.s 			page 3


 115               	adcEnable:
 116               		.stabd	46,0,0
   1:adc.c         **** #include "adc.h"
   2:adc.c         **** 
   3:adc.c         **** #include <avr/io.h>
   4:adc.c         **** 
   5:adc.c         **** inline void adcEnable(void)
   6:adc.c         **** {
 117               		.stabn	68,0,6,.LM0-.LFBB1
 118               	.LM0:
 119               	.LFBB1:
 120               	/* prologue: function */
 121               	/* frame size = 0 */
 122               	/* stack size = 0 */
 123               	.L__stack_usage = 0
   7:adc.c         ****     ADCSRA |= (1 << ADEN);
 124               		.stabn	68,0,7,.LM1-.LFBB1
 125               	.LM1:
 126 0000 EAE7      		ldi r30,lo8(122)
 127 0002 F0E0      		ldi r31,0
 128 0004 8081      		ld r24,Z
 129 0006 8068      		ori r24,lo8(-128)
 130 0008 8083      		st Z,r24
 131 000a 0895      		ret
 132               		.size	adcEnable, .-adcEnable
 133               	.Lscope1:
 134               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 135               		.stabd	78,0,0
 136               		.stabs	"adcDisable:F(0,47)",36,0,10,adcDisable
 137               	.global	adcDisable
 138               		.type	adcDisable, @function
 139               	adcDisable:
 140               		.stabd	46,0,0
   8:adc.c         **** }
   9:adc.c         **** 
  10:adc.c         **** inline void adcDisable(void)
  11:adc.c         **** {
 141               		.stabn	68,0,11,.LM2-.LFBB2
 142               	.LM2:
 143               	.LFBB2:
 144               	/* prologue: function */
 145               	/* frame size = 0 */
 146               	/* stack size = 0 */
 147               	.L__stack_usage = 0
  12:adc.c         ****     ADCSRA &= ~(1 << ADEN);
 148               		.stabn	68,0,12,.LM3-.LFBB2
 149               	.LM3:
 150 000c EAE7      		ldi r30,lo8(122)
 151 000e F0E0      		ldi r31,0
 152 0010 8081      		ld r24,Z
 153 0012 8F77      		andi r24,lo8(127)
 154 0014 8083      		st Z,r24
 155 0016 0895      		ret
 156               		.size	adcDisable, .-adcDisable
 157               	.Lscope2:
 158               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 159               		.stabd	78,0,0
GAS LISTING /tmp/cc1C1wZc.s 			page 4


 160               		.stabs	"adcEnableInterurpt:F(0,47)",36,0,15,adcEnableInterurpt
 161               	.global	adcEnableInterurpt
 162               		.type	adcEnableInterurpt, @function
 163               	adcEnableInterurpt:
 164               		.stabd	46,0,0
  13:adc.c         **** }
  14:adc.c         **** 
  15:adc.c         **** inline void adcEnableInterurpt(void)
  16:adc.c         **** {
 165               		.stabn	68,0,16,.LM4-.LFBB3
 166               	.LM4:
 167               	.LFBB3:
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
  17:adc.c         ****     ADCSRA |= (1 << ADIE);
 172               		.stabn	68,0,17,.LM5-.LFBB3
 173               	.LM5:
 174 0018 EAE7      		ldi r30,lo8(122)
 175 001a F0E0      		ldi r31,0
 176 001c 8081      		ld r24,Z
 177 001e 8860      		ori r24,lo8(8)
 178 0020 8083      		st Z,r24
 179 0022 0895      		ret
 180               		.size	adcEnableInterurpt, .-adcEnableInterurpt
 181               	.Lscope3:
 182               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 183               		.stabd	78,0,0
 184               		.stabs	"adcDisableInterrupt:F(0,47)",36,0,20,adcDisableInterrupt
 185               	.global	adcDisableInterrupt
 186               		.type	adcDisableInterrupt, @function
 187               	adcDisableInterrupt:
 188               		.stabd	46,0,0
  18:adc.c         **** }
  19:adc.c         **** 
  20:adc.c         **** inline void adcDisableInterrupt(void)
  21:adc.c         **** {
 189               		.stabn	68,0,21,.LM6-.LFBB4
 190               	.LM6:
 191               	.LFBB4:
 192               	/* prologue: function */
 193               	/* frame size = 0 */
 194               	/* stack size = 0 */
 195               	.L__stack_usage = 0
  22:adc.c         ****     ADCSRA &= ~(1 << ADIE);
 196               		.stabn	68,0,22,.LM7-.LFBB4
 197               	.LM7:
 198 0024 EAE7      		ldi r30,lo8(122)
 199 0026 F0E0      		ldi r31,0
 200 0028 8081      		ld r24,Z
 201 002a 877F      		andi r24,lo8(-9)
 202 002c 8083      		st Z,r24
 203 002e 0895      		ret
 204               		.size	adcDisableInterrupt, .-adcDisableInterrupt
 205               	.Lscope4:
 206               		.stabs	"",36,0,0,.Lscope4-.LFBB4
GAS LISTING /tmp/cc1C1wZc.s 			page 5


 207               		.stabd	78,0,0
 208               		.stabs	"adcSetPrescaler:F(0,47)",36,0,25,adcSetPrescaler
 209               		.stabs	"prescaler:P(1,2)",64,0,25,24
 210               	.global	adcSetPrescaler
 211               		.type	adcSetPrescaler, @function
 212               	adcSetPrescaler:
 213               		.stabd	46,0,0
  23:adc.c         **** }
  24:adc.c         **** 
  25:adc.c         **** inline void adcSetPrescaler(ADC_PRESCLAER prescaler)
  26:adc.c         **** {
 214               		.stabn	68,0,26,.LM8-.LFBB5
 215               	.LM8:
 216               	.LFBB5:
 217               	/* prologue: function */
 218               	/* frame size = 0 */
 219               	/* stack size = 0 */
 220               	.L__stack_usage = 0
  27:adc.c         ****     ADCSRA |= prescaler;
 221               		.stabn	68,0,27,.LM9-.LFBB5
 222               	.LM9:
 223 0030 EAE7      		ldi r30,lo8(122)
 224 0032 F0E0      		ldi r31,0
 225 0034 9081      		ld r25,Z
 226 0036 982B      		or r25,r24
 227 0038 9083      		st Z,r25
 228 003a 0895      		ret
 229               		.size	adcSetPrescaler, .-adcSetPrescaler
 230               	.Lscope5:
 231               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 232               		.stabd	78,0,0
 233               		.stabs	"adcSetResultFormat:F(0,47)",36,0,30,adcSetResultFormat
 234               		.stabs	"resultFormat:P(1,4)",64,0,30,24
 235               	.global	adcSetResultFormat
 236               		.type	adcSetResultFormat, @function
 237               	adcSetResultFormat:
 238               		.stabd	46,0,0
  28:adc.c         **** }
  29:adc.c         **** 
  30:adc.c         **** inline void adcSetResultFormat(ADC_RESULT_FORMAT resultFormat)
  31:adc.c         **** {
 239               		.stabn	68,0,31,.LM10-.LFBB6
 240               	.LM10:
 241               	.LFBB6:
 242               	/* prologue: function */
 243               	/* frame size = 0 */
 244               	/* stack size = 0 */
 245               	.L__stack_usage = 0
  32:adc.c         ****     ADMUX |= resultFormat << 5;
 246               		.stabn	68,0,32,.LM11-.LFBB6
 247               	.LM11:
 248 003c ECE7      		ldi r30,lo8(124)
 249 003e F0E0      		ldi r31,0
 250 0040 2081      		ld r18,Z
 251 0042 30E2      		ldi r19,lo8(32)
 252 0044 839F      		mul r24,r19
 253 0046 C001      		movw r24,r0
GAS LISTING /tmp/cc1C1wZc.s 			page 6


 254 0048 1124      		clr __zero_reg__
 255 004a 282B      		or r18,r24
 256 004c 2083      		st Z,r18
 257 004e 0895      		ret
 258               		.size	adcSetResultFormat, .-adcSetResultFormat
 259               	.Lscope6:
 260               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 261               		.stabd	78,0,0
 262               		.stabs	"adcSetVoltageReference:F(0,47)",36,0,35,adcSetVoltageReference
 263               		.stabs	"voltageReference:P(1,6)",64,0,35,24
 264               	.global	adcSetVoltageReference
 265               		.type	adcSetVoltageReference, @function
 266               	adcSetVoltageReference:
 267               		.stabd	46,0,0
  33:adc.c         **** }
  34:adc.c         **** 
  35:adc.c         **** inline void adcSetVoltageReference(ADC_VOLTAGE_REFERENCE voltageReference)
  36:adc.c         **** {
 268               		.stabn	68,0,36,.LM12-.LFBB7
 269               	.LM12:
 270               	.LFBB7:
 271               	/* prologue: function */
 272               	/* frame size = 0 */
 273               	/* stack size = 0 */
 274               	.L__stack_usage = 0
  37:adc.c         ****     ADMUX |= voltageReference << 6;
 275               		.stabn	68,0,37,.LM13-.LFBB7
 276               	.LM13:
 277 0050 ECE7      		ldi r30,lo8(124)
 278 0052 F0E0      		ldi r31,0
 279 0054 2081      		ld r18,Z
 280 0056 30E4      		ldi r19,lo8(64)
 281 0058 839F      		mul r24,r19
 282 005a C001      		movw r24,r0
 283 005c 1124      		clr __zero_reg__
 284 005e 282B      		or r18,r24
 285 0060 2083      		st Z,r18
 286 0062 0895      		ret
 287               		.size	adcSetVoltageReference, .-adcSetVoltageReference
 288               	.Lscope7:
 289               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 290               		.stabd	78,0,0
 291               		.stabs	"adcSelectChannel:F(0,47)",36,0,40,adcSelectChannel
 292               		.stabs	"channel:P(1,8)",64,0,40,24
 293               	.global	adcSelectChannel
 294               		.type	adcSelectChannel, @function
 295               	adcSelectChannel:
 296               		.stabd	46,0,0
  38:adc.c         **** }
  39:adc.c         **** 
  40:adc.c         **** inline void adcSelectChannel(ADC_CHANNEL channel)
  41:adc.c         **** {
 297               		.stabn	68,0,41,.LM14-.LFBB8
 298               	.LM14:
 299               	.LFBB8:
 300               	/* prologue: function */
 301               	/* frame size = 0 */
GAS LISTING /tmp/cc1C1wZc.s 			page 7


 302               	/* stack size = 0 */
 303               	.L__stack_usage = 0
  42:adc.c         ****     ADMUX = (ADMUX & 0b11110000) | channel;
 304               		.stabn	68,0,42,.LM15-.LFBB8
 305               	.LM15:
 306 0064 ECE7      		ldi r30,lo8(124)
 307 0066 F0E0      		ldi r31,0
 308 0068 9081      		ld r25,Z
 309 006a 907F      		andi r25,lo8(-16)
 310 006c 982B      		or r25,r24
 311 006e 9083      		st Z,r25
 312 0070 0895      		ret
 313               		.size	adcSelectChannel, .-adcSelectChannel
 314               	.Lscope8:
 315               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 316               		.stabd	78,0,0
 317               		.stabs	"adcStartConvert:F(0,47)",36,0,45,adcStartConvert
 318               		.stabs	"channel:P(1,8)",64,0,45,24
 319               	.global	adcStartConvert
 320               		.type	adcStartConvert, @function
 321               	adcStartConvert:
 322               		.stabd	46,0,0
  43:adc.c         **** }
  44:adc.c         **** 
  45:adc.c         **** inline void adcStartConvert(ADC_CHANNEL channel)
  46:adc.c         **** {
 323               		.stabn	68,0,46,.LM16-.LFBB9
 324               	.LM16:
 325               	.LFBB9:
 326               	/* prologue: function */
 327               	/* frame size = 0 */
 328               	/* stack size = 0 */
 329               	.L__stack_usage = 0
  47:adc.c         ****     adcSelectChannel(channel);
 330               		.stabn	68,0,47,.LM17-.LFBB9
 331               	.LM17:
 332 0072 0E94 0000 		call adcSelectChannel
  48:adc.c         **** 	ADCSRA |= (1 << ADSC);
 333               		.stabn	68,0,48,.LM18-.LFBB9
 334               	.LM18:
 335 0076 EAE7      		ldi r30,lo8(122)
 336 0078 F0E0      		ldi r31,0
 337 007a 8081      		ld r24,Z
 338 007c 8064      		ori r24,lo8(64)
 339 007e 8083      		st Z,r24
 340 0080 0895      		ret
 341               		.size	adcStartConvert, .-adcStartConvert
 342               	.Lscope9:
 343               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 344               		.stabd	78,0,0
 345               		.stabs	"adcReadLeftAdjusted:F(0,4)",36,0,51,adcReadLeftAdjusted
 346               	.global	adcReadLeftAdjusted
 347               		.type	adcReadLeftAdjusted, @function
 348               	adcReadLeftAdjusted:
 349               		.stabd	46,0,0
  49:adc.c         **** }
  50:adc.c         **** 
GAS LISTING /tmp/cc1C1wZc.s 			page 8


  51:adc.c         **** inline unsigned int adcReadLeftAdjusted(void)
  52:adc.c         **** {
 350               		.stabn	68,0,52,.LM19-.LFBB10
 351               	.LM19:
 352               	.LFBB10:
 353               	/* prologue: function */
 354               	/* frame size = 0 */
 355               	/* stack size = 0 */
 356               	.L__stack_usage = 0
  53:adc.c         ****     return ((ADCH << 2) | (ADCL >> 6));
 357               		.stabn	68,0,53,.LM20-.LFBB10
 358               	.LM20:
 359 0082 8091 7900 		lds r24,121
 360 0086 2091 7800 		lds r18,120
 361 008a 2295      		swap r18
 362 008c 2695      		lsr r18
 363 008e 2695      		lsr r18
 364 0090 2370      		andi r18,lo8(3)
 365 0092 34E0      		ldi r19,lo8(4)
 366 0094 839F      		mul r24,r19
 367 0096 C001      		movw r24,r0
 368 0098 1124      		clr __zero_reg__
  54:adc.c         **** }
 369               		.stabn	68,0,54,.LM21-.LFBB10
 370               	.LM21:
 371 009a 822B      		or r24,r18
 372 009c 0895      		ret
 373               		.size	adcReadLeftAdjusted, .-adcReadLeftAdjusted
 374               	.Lscope10:
 375               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 376               		.stabd	78,0,0
 377               		.stabs	"adcReadRightAdjusted:F(0,4)",36,0,56,adcReadRightAdjusted
 378               	.global	adcReadRightAdjusted
 379               		.type	adcReadRightAdjusted, @function
 380               	adcReadRightAdjusted:
 381               		.stabd	46,0,0
  55:adc.c         **** 
  56:adc.c         **** inline unsigned int adcReadRightAdjusted(void)
  57:adc.c         **** {
 382               		.stabn	68,0,57,.LM22-.LFBB11
 383               	.LM22:
 384               	.LFBB11:
 385               	/* prologue: function */
 386               	/* frame size = 0 */
 387               	/* stack size = 0 */
 388               	.L__stack_usage = 0
  58:adc.c         ****     return ((ADCH << 8) | ADCL);
 389               		.stabn	68,0,58,.LM23-.LFBB11
 390               	.LM23:
 391 009e 2091 7900 		lds r18,121
 392 00a2 8091 7800 		lds r24,120
 393 00a6 90E0      		ldi r25,0
  59:adc.c         **** }
 394               		.stabn	68,0,59,.LM24-.LFBB11
 395               	.LM24:
 396 00a8 922B      		or r25,r18
 397 00aa 0895      		ret
GAS LISTING /tmp/cc1C1wZc.s 			page 9


 398               		.size	adcReadRightAdjusted, .-adcReadRightAdjusted
 399               	.Lscope11:
 400               		.stabs	"",36,0,0,.Lscope11-.LFBB11
 401               		.stabd	78,0,0
 402               		.stabs	"adcRead:F(0,4)",36,0,61,adcRead
 403               	.global	adcRead
 404               		.type	adcRead, @function
 405               	adcRead:
 406               		.stabd	46,0,0
  60:adc.c         **** 
  61:adc.c         **** inline unsigned int adcRead(void)
  62:adc.c         **** {
 407               		.stabn	68,0,62,.LM25-.LFBB12
 408               	.LM25:
 409               	.LFBB12:
 410               	/* prologue: function */
 411               	/* frame size = 0 */
 412               	/* stack size = 0 */
 413               	.L__stack_usage = 0
  63:adc.c         ****     return ADC;
 414               		.stabn	68,0,63,.LM26-.LFBB12
 415               	.LM26:
 416 00ac 8091 7800 		lds r24,120
 417 00b0 9091 7900 		lds r25,120+1
  64:adc.c         **** }
 418               		.stabn	68,0,64,.LM27-.LFBB12
 419               	.LM27:
 420 00b4 0895      		ret
 421               		.size	adcRead, .-adcRead
 422               	.Lscope12:
 423               		.stabs	"",36,0,0,.Lscope12-.LFBB12
 424               		.stabd	78,0,0
 425               		.stabs	"",100,0,0,.Letext0
 426               	.Letext0:
 427               		.ident	"GCC: (GNU) 4.8.1"
GAS LISTING /tmp/cc1C1wZc.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/cc1C1wZc.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc1C1wZc.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc1C1wZc.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc1C1wZc.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc1C1wZc.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc1C1wZc.s:115    .text:0000000000000000 adcEnable
     /tmp/cc1C1wZc.s:139    .text:000000000000000c adcDisable
     /tmp/cc1C1wZc.s:163    .text:0000000000000018 adcEnableInterurpt
     /tmp/cc1C1wZc.s:187    .text:0000000000000024 adcDisableInterrupt
     /tmp/cc1C1wZc.s:212    .text:0000000000000030 adcSetPrescaler
     /tmp/cc1C1wZc.s:237    .text:000000000000003c adcSetResultFormat
     /tmp/cc1C1wZc.s:266    .text:0000000000000050 adcSetVoltageReference
     /tmp/cc1C1wZc.s:295    .text:0000000000000064 adcSelectChannel
     /tmp/cc1C1wZc.s:321    .text:0000000000000072 adcStartConvert
     /tmp/cc1C1wZc.s:348    .text:0000000000000082 adcReadLeftAdjusted
     /tmp/cc1C1wZc.s:380    .text:000000000000009e adcReadRightAdjusted
     /tmp/cc1C1wZc.s:405    .text:00000000000000ac adcRead

NO UNDEFINED SYMBOLS
