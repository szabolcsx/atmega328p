Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_mulsi3.o)
                              lcd2.o (__mulsi3)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
                              lcd2.o (__udivmodhi4)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
                              lcd2.o (__udivmodsi4)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                              test_lcd2.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_umulhisi3.o)
                              lcd2.o (__umulhisi3)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_muluhisi3.o)
                              /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_mulsi3.o) (__muluhisi3)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libm.a
LOAD lcd2.o
LOAD test_lcd2.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x92c
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000008a        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x0000000000000092        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000092                __vector_22
                0x0000000000000092                __vector_1
                0x0000000000000092                __vector_24
                0x0000000000000092                __vector_12
                0x0000000000000092                __bad_interrupt
                0x0000000000000092                __vector_6
                0x0000000000000092                __vector_3
                0x0000000000000092                __vector_23
                0x0000000000000092                __vector_25
                0x0000000000000092                __vector_11
                0x0000000000000092                __vector_13
                0x0000000000000092                __vector_17
                0x0000000000000092                __vector_19
                0x0000000000000092                __vector_7
                0x0000000000000092                __vector_5
                0x0000000000000092                __vector_4
                0x0000000000000092                __vector_9
                0x0000000000000092                __vector_2
                0x0000000000000092                __vector_21
                0x0000000000000092                __vector_15
                0x0000000000000092                __vector_8
                0x0000000000000092                __vector_14
                0x0000000000000092                __vector_10
                0x0000000000000092                __vector_16
                0x0000000000000092                __vector_18
                0x0000000000000092                __vector_20
 .text          0x0000000000000096      0x784 lcd2.o
                0x0000000000000096                lcdwNibble
                0x000000000000016a                lcdWrite
                0x000000000000019a                lcdClear
                0x00000000000001f4                lcdInit
                0x00000000000002dc                lcdwCmd
                0x0000000000000326                lcdwChar
                0x000000000000036e                lcdwString
                0x0000000000000392                lcdwUInt
                0x0000000000000400                lcdwInt
                0x000000000000042c                lcdwLong
                0x000000000000046c                lcdwULong
                0x0000000000000514                lcdFill
                0x000000000000054a                lcdwStringNFill
                0x0000000000000592                lcdAdvance
                0x00000000000005ac                lcdwStringAt
                0x00000000000005cc                lcdInitBargraph
                0x000000000000075c                lcdPrintBargraphAt
 .text          0x000000000000081a        0x0 test_lcd2.o
 .text          0x000000000000081a        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_mulsi3.o)
 .text          0x000000000000081a        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x000000000000081a        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x000000000000081a        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text          0x000000000000081a        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000081a        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_umulhisi3.o)
 .text          0x000000000000081a        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_muluhisi3.o)
                0x000000000000081a                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000081a       0x4e test_lcd2.o
                0x000000000000081a                main
 .text.libgcc.mul
                0x0000000000000868       0x20 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_mulsi3.o)
                0x0000000000000868                __mulsi3
 .text.libgcc.div
                0x0000000000000888        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_mulsi3.o)
 .text.libgcc   0x0000000000000888        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_mulsi3.o)
 .text.libgcc.prologue
                0x0000000000000888        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_mulsi3.o)
 .text.libgcc.builtins
                0x0000000000000888        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_mulsi3.o)
 .text.libgcc.fmul
                0x0000000000000888        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_mulsi3.o)
 .text.libgcc.fixed
                0x0000000000000888        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_mulsi3.o)
 .text.libgcc.mul
                0x0000000000000888        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000888       0x28 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000000888                __udivmodhi4
 .text.libgcc   0x00000000000008b0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000000008b0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000000008b0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000000008b0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000000008b0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000000000008b0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x00000000000008b0       0x44 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
                0x00000000000008b0                __udivmodsi4
 .text.libgcc   0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000008f4        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000008f4       0x1e /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_umulhisi3.o)
                0x00000000000008f4                __umulhisi3
 .text.libgcc.div
                0x0000000000000912        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000000912        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000000912        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000000912        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000000912        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x0000000000000912        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.mul
                0x0000000000000912       0x16 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_muluhisi3.o)
                0x0000000000000912                __muluhisi3
 .text.libgcc.div
                0x0000000000000928        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc   0x0000000000000928        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.prologue
                0x0000000000000928        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.builtins
                0x0000000000000928        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.fmul
                0x0000000000000928        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.fixed
                0x0000000000000928        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_muluhisi3.o)
                0x0000000000000928                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000928        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                0x0000000000000928                exit
                0x0000000000000928                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000928        0x4 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000092c                _etext = .

.data           0x0000000000800100       0x20 load address 0x000000000000092c
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x0 lcd2.o
 .data          0x0000000000800100       0x12 test_lcd2.o
                0x0000000000800100                lcdHandle
 .data          0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_mulsi3.o)
 .data          0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_umulhisi3.o)
 .data          0x0000000000800112        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_muluhisi3.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800112        0xd test_lcd2.o
 *(.gnu.linkonce.d*)
                0x0000000000800120                . = ALIGN (0x2)
 *fill*         0x000000000080011f        0x1 
                0x0000000000800120                _edata = .
                0x0000000000800120                PROVIDE (__data_end, .)

.bss            0x0000000000800120        0x0
                0x0000000000800120                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000800120        0x0 lcd2.o
 .bss           0x0000000000800120        0x0 test_lcd2.o
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_mulsi3.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_umulhisi3.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_muluhisi3.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800120                PROVIDE (__bss_end, .)
                0x000000000000092c                __data_load_start = LOADADDR (.data)
                0x000000000000094c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800120        0x0
                0x0000000000800120                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800120                PROVIDE (__noinit_end, .)
                0x0000000000800120                _end = .
                0x0000000000800120                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x162c
 *(.stab)
 .stab          0x0000000000000000     0x12c0 lcd2.o
 .stab          0x00000000000012c0      0x36c test_lcd2.o
                                        0x528 (size before relaxing)

.stabstr        0x0000000000000000     0x1199
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1199 lcd2.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 lcd2.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 test_lcd2.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(lcd2.out elf32-avr)
LOAD linker stubs
